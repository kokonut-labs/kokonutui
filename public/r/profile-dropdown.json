{
  "name": "profile-dropdown",
  "type": "registry:component",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "dropdown-menu"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { Settings, CreditCard, FileText, LogOut, User } from \"lucide-react\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport {\n    DropdownMenu,\n    DropdownMenuContent,\n    DropdownMenuItem,\n    DropdownMenuSeparator,\n    DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport Gemini from \"../icons/gemini\";\n\ninterface Profile {\n    name: string;\n    email: string;\n    avatar: string;\n    subscription?: string;\n    model?: string;\n}\n\ninterface MenuItem {\n    label: string;\n    value?: string;\n    href: string;\n    icon: React.ReactNode;\n    external?: boolean;\n}\n\nconst SAMPLE_PROFILE_DATA: Profile = {\n    name: \"Eugene An\",\n    email: \"eugene@kokonutui.com\",\n    avatar: \"https://ferf1mheo22r9ira.public.blob.vercel-storage.com/profile-mjss82WnWBRO86MHHGxvJ2TVZuyrDv.jpeg\",\n    subscription: \"PRO\",\n    model: \"Gemini 2.0 Flash\",\n};\n\ninterface ProfileDropdownProps extends React.HTMLAttributes<HTMLDivElement> {\n    data?: Profile;\n    showTopbar?: boolean;\n}\n\nexport default function ProfileDropdown({\n    data = SAMPLE_PROFILE_DATA,\n    className,\n    ...props\n}: ProfileDropdownProps) {\n    const [isOpen, setIsOpen] = React.useState(false);\n    const menuItems: MenuItem[] = [\n        {\n            label: \"Profile\",\n            href: \"#\",\n            icon: <User className=\"w-4 h-4\" />,\n        },\n        {\n            label: \"Model\",\n            value: data.model,\n            href: \"#\",\n            icon: <Gemini className=\"w-4 h-4\" />,\n        },\n        {\n            label: \"Subscription\",\n            value: data.subscription,\n            href: \"#\",\n            icon: <CreditCard className=\"w-4 h-4\" />,\n        },\n        {\n            label: \"Settings\",\n            href: \"#\",\n            icon: <Settings className=\"w-4 h-4\" />,\n        },\n        {\n            label: \"Terms & Policies\",\n            href: \"#\",\n            icon: <FileText className=\"w-4 h-4\" />,\n            external: true,\n        },\n    ];\n\n    return (\n        <div className={cn(\"relative\", className)} {...props}>\n            <DropdownMenu onOpenChange={setIsOpen}>\n                <div className=\"group relative\">\n                    <DropdownMenuTrigger asChild>\n                        <button\n                            type=\"button\"\n                            className=\"flex items-center gap-16 p-3 rounded-2xl bg-white dark:bg-zinc-900 border border-zinc-200/60 dark:border-zinc-800/60 hover:border-zinc-300 dark:hover:border-zinc-700 hover:bg-zinc-50/80 dark:hover:bg-zinc-800/40 hover:shadow-sm transition-all duration-200 focus:outline-none\"\n                        >\n                            <div className=\"text-left flex-1\">\n                                <div className=\"text-sm font-medium text-zinc-900 dark:text-zinc-100 tracking-tight leading-tight\">\n                                    {data.name}\n                                </div>\n                                <div className=\"text-xs text-zinc-500 dark:text-zinc-400 tracking-tight leading-tight\">\n                                    {data.email}\n                                </div>\n                            </div>\n                            <div className=\"relative\">\n                                <div className=\"w-10 h-10 rounded-full bg-gradient-to-br from-purple-500 via-pink-500 to-orange-400 p-0.5\">\n                                    <div className=\"w-full h-full rounded-full overflow-hidden bg-white dark:bg-zinc-900\">\n                                        <Image\n                                            src={data.avatar}\n                                            alt={data.name}\n                                            width={36}\n                                            height={36}\n                                            className=\"w-full h-full object-cover rounded-full\"\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </button>\n                    </DropdownMenuTrigger>\n\n                    {/* Bending line indicator on the right */}\n                    <div\n                        className={cn(\n                            \"absolute -right-3 top-1/2 -translate-y-1/2 transition-all duration-200\",\n                            isOpen\n                                ? \"opacity-100\"\n                                : \"opacity-60 group-hover:opacity-100\"\n                        )}\n                    >\n                        <svg\n                            width=\"12\"\n                            height=\"24\"\n                            viewBox=\"0 0 12 24\"\n                            fill=\"none\"\n                            className={cn(\n                                \"transition-all duration-200\",\n                                isOpen\n                                    ? \"text-blue-500 dark:text-blue-400 scale-110\"\n                                    : \"text-zinc-400 dark:text-zinc-500 group-hover:text-zinc-600 dark:group-hover:text-zinc-300\"\n                            )}\n                            aria-hidden=\"true\"\n                        >\n                            <path\n                                d=\"M2 4C6 8 6 16 2 20\"\n                                stroke=\"currentColor\"\n                                strokeWidth=\"1.5\"\n                                strokeLinecap=\"round\"\n                                fill=\"none\"\n                            />\n                        </svg>\n                    </div>\n\n                    <DropdownMenuContent\n                        align=\"end\"\n                        sideOffset={4}\n                        className=\"w-64 p-2 bg-white/95 dark:bg-zinc-900/95 backdrop-blur-sm border border-zinc-200/60 dark:border-zinc-800/60 rounded-2xl shadow-xl shadow-zinc-900/5 dark:shadow-zinc-950/20 \n                    data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-top-right\"\n                    >\n                        <div className=\"space-y-1\">\n                            {menuItems.map((item) => (\n                                <DropdownMenuItem key={item.label} asChild>\n                                    <Link\n                                        href={item.href}\n                                        className=\"flex items-center p-3 hover:bg-zinc-100/80 dark:hover:bg-zinc-800/60 rounded-xl transition-all duration-200 cursor-pointer group hover:shadow-sm border border-transparent hover:border-zinc-200/50 dark:hover:border-zinc-700/50\"\n                                    >\n                                        <div className=\"flex items-center gap-2 flex-1\">\n                                            {item.icon}\n                                            <span className=\"text-sm font-medium text-zinc-900 dark:text-zinc-100 tracking-tight leading-tight whitespace-nowrap group-hover:text-zinc-950 dark:group-hover:text-zinc-50 transition-colors\">\n                                                {item.label}\n                                            </span>\n                                        </div>\n                                        <div className=\"flex-shrink-0 ml-auto\">\n                                            {item.value && (\n                                                <span\n                                                    className={cn(\n                                                        \"text-xs font-medium rounded-md py-1 px-2 tracking-tight\",\n                                                        item.label === \"Model\"\n                                                            ? \"text-blue-600 bg-blue-50 dark:text-blue-400 dark:bg-blue-500/10 border border-blue-500/10\"\n                                                            : \"text-purple-600 bg-purple-50 dark:text-purple-400 dark:bg-purple-500/10 border border-purple-500/10\"\n                                                    )}\n                                                >\n                                                    {item.value}\n                                                </span>\n                                            )}\n                                        </div>\n                                    </Link>\n                                </DropdownMenuItem>\n                            ))}\n                        </div>\n\n                        <DropdownMenuSeparator className=\"my-3 bg-gradient-to-r from-transparent via-zinc-200 to-transparent dark:via-zinc-800\" />\n\n                        <DropdownMenuItem asChild>\n                            <button\n                                type=\"button\"\n                                className=\"w-full flex items-center gap-3 p-3 duration-200 bg-red-500/10 rounded-xl hover:bg-red-500/20 cursor-pointer border border-transparent hover:border-red-500/30 hover:shadow-sm transition-all group\"\n                            >\n                                <LogOut className=\"w-4 h-4 text-red-500 group-hover:text-red-600\" />\n                                <span className=\"text-sm font-medium text-red-500 group-hover:text-red-600\">\n                                    Sign Out\n                                </span>\n                            </button>\n                        </DropdownMenuItem>\n                    </DropdownMenuContent>\n                </div>\n            </DropdownMenu>\n        </div>\n    );\n}\n",
      "path": "/components/kokonutui/profile-dropdown.tsx",
      "target": "components/kokonutui/profile-dropdown.tsx"
    },
    {
      "type": "registry:component",
      "content": "const Gemini = (props: React.SVGProps<SVGSVGElement>) => (\n    <svg\n        height=\"1em\"\n        style={{\n            flex: \"none\",\n            lineHeight: 1,\n        }}\n        viewBox=\"0 0 24 24\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"1em\"\n        {...props}\n    >\n        <title>{\"Gemini\"}</title>\n        <defs>\n            <linearGradient\n                id=\"lobe-icons-gemini-fill\"\n                x1=\"0%\"\n                x2=\"68.73%\"\n                y1=\"100%\"\n                y2=\"30.395%\"\n            >\n                <stop offset=\"0%\" stopColor=\"#1C7DFF\" />\n                <stop offset=\"52.021%\" stopColor=\"#1C69FF\" />\n                <stop offset=\"100%\" stopColor=\"#F0DCD6\" />\n            </linearGradient>\n        </defs>\n        <path\n            d=\"M12 24A14.304 14.304 0 000 12 14.304 14.304 0 0012 0a14.305 14.305 0 0012 12 14.305 14.305 0 00-12 12\"\n            fill=\"url(#lobe-icons-gemini-fill)\"\n            fillRule=\"nonzero\"\n        />\n    </svg>\n);\nexport default Gemini;\n",
      "path": "/components/icons/gemini.tsx",
      "target": "components/kokonutui/gemini.tsx"
    }
  ]
}